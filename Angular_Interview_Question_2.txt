Q.1) What are the commands which are used to create component, service, pipe and directive?
Ans: 
To create component in Angular, we have to use the command as: ng generate component Name_of_Component
To create pipe in Angular, we have to use the command as: ng generate pipe Name_of_Pipe
To create service in Angular, we have to use the command as: ng generate service Name_of_service
To create directive in Angular, we have to use the command as: ng generate directive Name_of_directive

Q.2) Explain the project structure of Angular Application
Ans: 

To create the new Angular project, we use the command as: ng new Name_of_Project 
After this command one folder gets created with Name_of_Project. That folder contains multiple subfolders and files.

It contains one folder named as node_modules. In this folder there are third party libraries on which application may depends. This folder is purely for development.

It contains one folder named as src which contains actual source code for developers.
Inside src folder their are 3 files
one file as index.html which is considered as entry-point for frontend which is html file. Here we cannot find any css or other js file. All other pages are dynamically inserted into the page.
second file is main.ts which is considered as entry-point for backend which is typescript file used for bootstrap the application.
third file is style.css where we can add global styles for our application.

It contains one folder named as app which is part of src folder which contains all modules and components of our application. Every application has at least one module and one component.

It contains one file named as package.json which is standard file. Every node and angular project contains this file. Basically this file contains all information like name of the project, version information, dependencies and development settings.

It contains one file as angular.json which is standard configuration file of our application.

These are things we need to discuss component, view, module, binding, directives, services, DI

Q.3) What is process called by which typescript code gets converted into javascript code?
Ans: The process by which typescript code gets converted into javascript code is called as transpilation. To convert the TypeScript file into JavaScript file we use command as: tsc Name_of_File.ts
In Angular, it is called as Ahead of Time Compilation.

Q.4) What is difference between Observables and Promises?
Ans: 
i) Observables is a feature of RxJS is considered as sequence of data which arrives asynchronously over the time, such as HTTP requests, user inputs or events where Promise is a feature of JavaScript used to handle single asynchronous operation that either resolved or rejected.
ii) Observables executes only when subscribed where Promises start execution immediately.
iii) Observables can emit multiple values over time where Promises emits a single value and cannot be canceled.


Q.5) Why typescript is used in Angular instead of JavaScript?
Ans: Object-Oriented Features, Data Types, Modern JavaScript Features

Q.6) What is Single Page Application in Angular?
Ans: A Single Page Application in Angular is web application that dynamically updated the content of single HTML page without full-page reload for navigation.

Q.7) What are the contents of Module in Angular Application?
Ans: In the Angular application, a Module organizes related components, directives, services and other elements.

i) Declaration:- Components, Directives and Pipes that belongs to the module.
ii) Imports:- Other Angular modules or custom modules required for the functionality.
iii) Exports:- Components, Directives or Pipes that should be accessible to other modules.
iv) Providers:- Services or Dependency Injection tokens available throughout the module.	
v) Bootstrap: The root component that gets bootstrapped at the application launch.

Q.8) What are the types of the Pipes in Angular?
Ans: By using the concept of Pipes, we can transform the data into desired output before displaying i.e. we can transform the data from one form to another form.

There are two types of pipes as:
i) Inbuilt Pipe -> In case of Inbuilt Pipe we use different types of pipes which are provided by Angular itself.
ii) Custom Pipe -> Custom Pipe allows us to essentially create the pure function which accept an input and return different output via some form of transformation.

Q.9) What is the use of Pipes in Angular?

Q.10) What are the types of forms in Angular?
Ans: There are two types of forms in Angular as Template-Driven form and Reactive form. Both the types of the forms are used for the Validation Purpose.


